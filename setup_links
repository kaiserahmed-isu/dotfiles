#!/usr/bin/env python

# 2011-08-20 
# Set up symlinks to config files in my dotfiles repository.
# expects to be run from the root of the dotfiles repository

# the basic pattern is like
#   ln -s dotfiles/config/foorc ~/.foorc
#   ln -s ../dotfiles/bin/foo ~/bin/foo

import sys, os
import filecmp

op = os.path
homedir = op.expanduser('~/')

def linkAllInDir(srcdir, destdir, dryrun=False, fileprefix=''):
    removeable = []
    if not op.isdir(destdir):
        os.mkdir(destdir)
    for f in os.listdir(srcdir):
        src  = op.join(srcdir,f)
        # XXX we can ditch relpath now that we're not doing ~/bin/
        srcrel = op.relpath(src, destdir)
        dest = op.join(destdir, fileprefix + f)

        if op.islink(dest) and op.samefile(src, dest):
            #print 'ALREADY LINKED: %s is already linked to %s' % (dest, src)
            pass
        elif op.exists(dest):
            if op.isfile(dest):
                if filecmp.cmp(src, dest):
                    print 'EXISTS BUT HAS SAME CONTENTS AS DOTFILES: %s' % dest
                    removeable.append(dest)
                else:
                    print 'EXISTS AND DIFFERS: %s  (not going to symlink it!)' % dest
            elif op.isdir(dest):
                print 'EXISTS AND IS A DIRECTORY: %s (doing nothing, check it yourself).' % dest
        else:
            if not dryrun:
                print 'CREATING LINK: ln -s %s %s' % (srcrel, dest)
                os.symlink(srcrel, dest)
            else:
                print 'DRY RUN: would do ln -s %s %s' % (srcrel, dest)
    return removeable

if __name__ == '__main__':
    assert op.basename(os.getcwd()) == 'dotfiles'
    dryrun = '--dry-run' in sys.argv[1:]

    if dryrun:
        print 'NOTE: performing a DRY RUN.  no actual changes will be made.'

    removeable =  linkAllInDir('config/', op.expanduser('~/'), dryrun, fileprefix='.')

    # don't populate bin anymore, just add ~/dotfiles/bin/ to $PATH
    #removeable += linkAllInDir('bin/', op.expanduser('~/bin/'), dryrun)

    if removeable:
        print "\nThe following files already existed but had the same contents as the repo."
        print "You can safely delete them and rerun this script to establish links."
        for f in removeable:
            print '  ' + f

